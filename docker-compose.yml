version: '3.8'

services:
  # Main API Service
  sbm-api:
    build: .
    container_name: sbm-crm-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/sbm_crm
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./backups:/app/backups
    networks:
      - sbm-network
    restart: unless-stopped

  # Streamlit Frontend
  sbm-frontend:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: sbm-crm-frontend
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://sbm-api:8000
    depends_on:
      - sbm-api
    volumes:
      - ./frontend:/app/frontend
    networks:
      - sbm-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: docker.m.daocloud.io/library/postgres:15
    container_name: sbm-postgres
    environment:
      - POSTGRES_DB=sbm_crm
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - sbm-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sbm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sbm-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sbm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - sbm-api
      - sbm-frontend
    networks:
      - sbm-network
    restart: unless-stopped

  # Background Worker for ETL
  sbm-worker:
    build: .
    container_name: sbm-crm-worker
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/sbm_crm
      - REDIS_URL=redis://redis:6379/0
      - WORKER_MODE=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    networks:
      - sbm-network
    restart: unless-stopped
    command: python -m scripts.run_etl schedule

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus
    container_name: sbm-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - sbm-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana
    container_name: sbm-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - sbm-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  sbm-network:
    driver: bridge